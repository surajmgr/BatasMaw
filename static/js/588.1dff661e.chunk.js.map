{"version":3,"file":"static/js/588.1dff661e.chunk.js","mappings":"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","sources":["Component/Global/BlogCard.jsx","Component/Global/HtmlParse.jsx","Global/Apis/useGetById.jsx","Pages/Media/EventDetails.jsx"],"sourcesContent":["import React from \"react\";\nimport HtmlParse from \"./HtmlParse\";\nimport { Link } from \"react-router-dom\";\n\nconst BlogCard = ({ data, slug }) => {\n  return (\n    <div className=\"blog-box overflow-hidden rounded-lg border bg-white h-full\">\n      <figure className=\"h-[300px]  bg-white\">\n        <img\n          src={data?.image}\n          alt={data?.name}\n          className=\"object-cover object-center\"\n        />\n      </figure>\n      <article className=\"border-t p-4 \">\n        <h2 className=\"line-clamp-1 text-xl text-primary\">\n          <Link\n            to={`${slug ? slug : \"\"}${data?.slug}`}\n            className=\"hover:underline\"\n          >\n            {data?.name}\n          </Link>\n        </h2>\n        <span className=\"text-xs text-black opacity-60\">\n          {data?.created_at}\n        </span>\n        <div className=\"line-clamp-3 text-balance pt-3 text-grey\">\n          <HtmlParse data={data?.description} />\n        </div>\n      </article>\n      <div className=\"btn-wrapper  px-4 pb-4\">\n        <Link\n          to={`${slug ? slug : \"\"}${data?.slug}`}\n          className=\"btn-transparent  inline-block px-8 py-2 uppercase text-secondary before:border-secondary hover:text-white hover:before:bg-secondary\"\n        >\n          View More\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogCard;\n","import React from \"react\";\nimport parse from \"html-react-parser\";\n\nconst HtmlParse = ({data}) => {\n  return <>{data && parse(data)}</>;\n};\n\nexport default HtmlParse;\n","import axios from \"axios\";\nimport { useState, useCallback, useEffect } from \"react\";\nimport { baseUrl } from \"./BaseUrl\";\n\nconst useGetById = (url,id) => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchDataById = useCallback(async (id) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${baseUrl}${url}/${id}`);\n      const fetchedData = response?.data?.data;\n      setData(fetchedData);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [url]); \n\n  useEffect(() => {\n    if (url && id) {\n      fetchDataById(id);\n    }\n  }, [fetchDataById, id, url]);\n\n  return { data, isLoading, error };\n};\n\nexport default useGetById;\n","import React from \"react\";\nimport useGetById from \"../../Global/Apis/useGetById\";\nimport Loading from \"../../Component/Global/Loading\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Breadcrumbs from \"../../Component/Global/BreadCrumbs\";\nimport HtmlParse from \"../../Component/Global/HtmlParse\";\nimport useGet from \"../../Global/Apis/useGet\";\nimport BlogCard from \"../../Component/Global/BlogCard\";\n\nconst EventDetails = () => {\n  const { slug } = useParams();\n  const { data: details, isLoading } = useGetById(\"events\", slug);\n  const { data: recent } = useGet(\"recent-events\");\n  console.log(details);\n  if (isLoading || !details) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <Breadcrumbs data={details?.name} />\n      <section className=\"events-details section-break bg-light-grey bg-opacity-40\">\n        <div className=\"side-padding\">\n          <div className=\"mx-auto max-w-[1200px]\">\n            <div className=\"grid grid-cols-2 gap-8 lg:grid-cols-3 \">\n              <div className=\"col-span-2\">\n                <div className=\"events-box\">\n                  <div className=\"heading-wrapper mb-4\">\n                    <h1 className=\"heading !text-primary\">{details?.name}</h1>\n                    <span className=\"text-xs text-black opacity-60\">\n                      {details?.created_at}\n                    </span>\n                  </div>\n                  <figure className=\"mb-4 h-[400px] overflow-hidden rounded-2xl border bg-white\">\n                    <img\n                      src={details?.image}\n                      alt={details?.name}\n                      className=\"object-cover object-center\"\n                    />\n                  </figure>\n                  <div className=\"leading-7 [&>*]:mb-2\">\n                    <HtmlParse data={details?.description} />\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-span-2 lg:col-span-1 \">\n                <div className=\"heading-wrapper mb-5\">\n                  <h2 className=\"heading capitalize\">recent Events</h2>\n                </div>\n                <div className=\"blog-groups grid grid-cols-2 gap-6\">\n                  {recent?.slice(0, 2)?.map((item, index) => (\n                    <div\n                      className=\"col-span-full sm:col-span-1 lg:col-span-full\"\n                      key={index}\n                    >\n                      <BlogCard data={item} slug={\"/events/\"} />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"btn-wrapper pt-6 text-center\">\n                  <Link\n                    className=\"btn-transparent skew-btn inline-block px-8 py-2 uppercase text-primary before:border-primary hover:text-white hover:before:bg-primary\"\n                    to=\"/events\"\n                  >\n                    View All Events\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default EventDetails;\n"],"names":["_ref","data","slug","_jsxs","className","children","_jsx","src","image","alt","name","Link","to","concat","created_at","HtmlParse","description","_Fragment","parse","url","id","_useState","useState","_useState2","_slicedToArray","setData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","fetchDataById","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_response$data","response","fetchedData","wrap","_context","prev","next","axios","get","baseUrl","sent","t0","finish","stop","_x","apply","arguments","useEffect","_recent$slice","useParams","_useGetById","useGetById","details","recent","useGet","console","log","Loading","Breadcrumbs","slice","map","item","index","BlogCard"],"sourceRoot":""}