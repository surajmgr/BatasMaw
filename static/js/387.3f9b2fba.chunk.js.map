{"version":3,"file":"static/js/387.3f9b2fba.chunk.js","mappings":"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","sources":["Component/Global/Article.jsx","Component/Global/BlogCard.jsx","Component/Global/HtmlParse.jsx","Component/Global/Pagination.jsx","Pages/Media/Blogs.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport HtmlParse from \"./HtmlParse\";\n\nconst Article = ({ title, desc, headClass, grey, slug,btnName,onButtonClick }) => {\n  return (\n    <div className=\"heading-wrapper mb-10 text-center\">\n      <h1 className={`heading mb-3 ${headClass}`}>{title}</h1>\n      <div className={`mx-auto w-full max-w-[900px] ${grey && \"text-grey\"}`}>\n        <HtmlParse data={desc}/>\n      </div>\n      {slug && (\n        <div className=\"btn-wrapper pt-8\">\n          <Link\n            className=\"btn-full skew-btn inline-block px-8 py-2 uppercase text-white before:bg-primary hover:opacity-90\" to={slug} onClick={onButtonClick}\n          >\n            {btnName}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Article;\n","import React from \"react\";\nimport HtmlParse from \"./HtmlParse\";\nimport { Link } from \"react-router-dom\";\n\nconst BlogCard = ({ data, slug }) => {\n  return (\n    <div className=\"blog-box overflow-hidden rounded-lg border bg-white h-full\">\n      <figure className=\"h-[300px]  bg-white\">\n        <img\n          src={data?.image}\n          alt={data?.name}\n          className=\"object-cover object-center\"\n        />\n      </figure>\n      <article className=\"border-t p-4 \">\n        <h2 className=\"line-clamp-1 text-xl text-primary\">\n          <Link\n            to={`${slug ? slug : \"\"}${data?.slug}`}\n            className=\"hover:underline\"\n          >\n            {data?.name}\n          </Link>\n        </h2>\n        <span className=\"text-xs text-black opacity-60\">\n          {data?.created_at}\n        </span>\n        <div className=\"line-clamp-3 text-balance pt-3 text-grey\">\n          <HtmlParse data={data?.description} />\n        </div>\n      </article>\n      <div className=\"btn-wrapper  px-4 pb-4\">\n        <Link\n          to={`${slug ? slug : \"\"}${data?.slug}`}\n          className=\"btn-transparent  inline-block px-8 py-2 uppercase text-secondary before:border-secondary hover:text-white hover:before:bg-secondary\"\n        >\n          View More\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogCard;\n","import React from \"react\";\nimport parse from \"html-react-parser\";\n\nconst HtmlParse = ({data}) => {\n  return <>{data && parse(data)}</>;\n};\n\nexport default HtmlParse;\n","import React, { forwardRef, useEffect, useMemo, useState } from \"react\";\n\nconst Pagination = forwardRef(({ data, view, setDataFromChild }, ref) => {\n  const executeScroll = () => {\n    if (ref.current) {\n      ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  };\n  const [viewProduct, setViewProduct] = useState(view);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const totalProduct = data?.length;\n  const totalViewInPage = Math.ceil(totalProduct / viewProduct);\n\n  const currentProducts = useMemo(() => {\n    const start = (currentPage - 1) * viewProduct;\n    return data?.slice(start, start + viewProduct);\n  }, [currentPage, viewProduct, data]);\n  useEffect(() => {\n    setDataFromChild(currentProducts);\n  }, [currentProducts, setDataFromChild]);\n\n  const handleClick = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    executeScroll();\n  };\n  return (\n    <>\n      {totalProduct > viewProduct && (\n        <div className=\"pagination flex justify-center pt-10 \">\n          <button\n            className=\"skew-btn btn-transparent px-4 py-2 duration-75 before:border-gray-300 before:bg-white hover:text-white hover:before:bg-primary\"\n            onClick={() => {\n              if (currentPage > 1) {\n                setCurrentPage(currentPage - 1);\n                executeScroll();\n              }\n            }}\n          >\n            Prev\n          </button>\n          {Array.from({ length: totalViewInPage }, (_, index) => (\n            <button\n              key={index}\n              onClick={() => handleClick(index + 1)}\n              className={`skew-btn btn-transparent px-4 py-2 duration-75 before:border-gray-300 before:bg-white hover:text-white hover:before:bg-primary ${index + 1 === currentPage ? \"text-white before:!bg-primary\" : \"\"}`}\n            >\n              {index + 1}\n            </button>\n          ))}\n          <button\n            className=\"skew-btn btn-transparent px-4 py-2 duration-75 before:border-gray-300 before:bg-white hover:text-white hover:before:bg-primary\"\n            onClick={() => {\n              if (currentPage < totalViewInPage) {\n                setCurrentPage(currentPage + 1);\n                executeScroll();\n              }\n            }}\n          >\n            Next\n          </button>\n        </div>\n      )}\n    </>\n  );\n});\n\nexport default Pagination;\n","import React, { useRef, useState } from \"react\";\nimport Breadcrumbs from \"../../Component/Global/BreadCrumbs\";\nimport useGet from \"../../Global/Apis/useGet\";\nimport Article from \"../../Component/Global/Article\";\nimport Pagination from \"../../Component/Global/Pagination\";\nimport BlogCard from \"../../Component/Global/BlogCard\";\nimport Loading from \"../../Component/Global/Loading\";\n\nconst Blogs = () => {\n  const { data ,isLoading} = useGet(\"blogs\");\n  const [dataFromChild, setDataFromChild] = useState([]);\n  const blogRef = useRef(null);\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <Breadcrumbs />\n      <section className=\"blog-page bg-light-grey bg-opacity-40\">\n        <div className=\"side-padding\">\n          <div className=\"section-break container mx-auto\">\n            <Article title={\"Our Blogs\"} headClass={\"\"} />\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8\" ref={blogRef}>\n              {dataFromChild?.map((item) => (\n                <div className=\"col-span-1\" key={item?.id}>\n                  <BlogCard data={item} />\n                </div>\n              ))}\n            </div>\n            <Pagination\n              ref={blogRef}\n              data={data}\n              view={8}\n              setDataFromChild={setDataFromChild}\n            />\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Blogs;\n"],"names":["_ref","title","desc","headClass","grey","slug","btnName","onButtonClick","_jsxs","className","children","_jsx","concat","HtmlParse","data","Link","to","onClick","src","image","alt","name","created_at","description","_Fragment","parse","Pagination","forwardRef","ref","view","setDataFromChild","executeScroll","current","scrollIntoView","behavior","block","_useState","useState","_useState2","_slicedToArray","viewProduct","_useState3","_useState4","currentPage","setCurrentPage","totalProduct","length","totalViewInPage","Math","ceil","currentProducts","useMemo","start","slice","useEffect","Array","from","_","index","_useGet","useGet","isLoading","dataFromChild","blogRef","useRef","Loading","Breadcrumbs","Article","map","item","BlogCard","id"],"sourceRoot":""}