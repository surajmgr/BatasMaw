{"version":3,"file":"static/js/373.cfc74c2c.chunk.js","mappings":"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","sources":["Component/Global/HtmlParse.jsx","Component/Global/Pagination.jsx","Pages/Testimonials.jsx"],"sourcesContent":["import React from \"react\";\nimport parse from \"html-react-parser\";\n\nconst HtmlParse = ({data}) => {\n  return <>{data && parse(data)}</>;\n};\n\nexport default HtmlParse;\n","import React, { forwardRef, useEffect, useMemo, useState } from \"react\";\n\nconst Pagination = forwardRef(({ data, view, setDataFromChild }, ref) => {\n  const executeScroll = () => {\n    if (ref.current) {\n      ref.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    }\n  };\n  const [viewProduct, setViewProduct] = useState(view);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const totalProduct = data?.length;\n  const totalViewInPage = Math.ceil(totalProduct / viewProduct);\n\n  const currentProducts = useMemo(() => {\n    const start = (currentPage - 1) * viewProduct;\n    return data?.slice(start, start + viewProduct);\n  }, [currentPage, viewProduct, data]);\n  useEffect(() => {\n    setDataFromChild(currentProducts);\n  }, [currentProducts, setDataFromChild]);\n\n  const handleClick = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    executeScroll();\n  };\n  return (\n    <>\n      {totalProduct > viewProduct && (\n        <div className=\"pagination flex justify-center pt-10 \">\n          <button\n            className=\"skew-btn btn-transparent px-4 py-2 duration-75 before:border-gray-300 before:bg-white hover:text-white hover:before:bg-primary\"\n            onClick={() => {\n              if (currentPage > 1) {\n                setCurrentPage(currentPage - 1);\n                executeScroll();\n              }\n            }}\n          >\n            Prev\n          </button>\n          {Array.from({ length: totalViewInPage }, (_, index) => (\n            <button\n              key={index}\n              onClick={() => handleClick(index + 1)}\n              className={`skew-btn btn-transparent px-4 py-2 duration-75 before:border-gray-300 before:bg-white hover:text-white hover:before:bg-primary ${index + 1 === currentPage ? \"text-white before:!bg-primary\" : \"\"}`}\n            >\n              {index + 1}\n            </button>\n          ))}\n          <button\n            className=\"skew-btn btn-transparent px-4 py-2 duration-75 before:border-gray-300 before:bg-white hover:text-white hover:before:bg-primary\"\n            onClick={() => {\n              if (currentPage < totalViewInPage) {\n                setCurrentPage(currentPage + 1);\n                executeScroll();\n              }\n            }}\n          >\n            Next\n          </button>\n        </div>\n      )}\n    </>\n  );\n});\n\nexport default Pagination;\n","import React, { useRef, useState } from \"react\";\nimport Breadcrumbs from \"../Component/Global/BreadCrumbs\";\nimport useGet from \"../Global/Apis/useGet\";\nimport HtmlParse from \"../Component/Global/HtmlParse\";\nimport Pagination from \"../Component/Global/Pagination\";\n\nconst Testimonials = () => {\n  const [dataFromChild, setDataFromChild] = useState([]);\n  const testimonalRef = useRef(null);\n  const { data: testimonals } = useGet(\"testimonials\");\n\n  return (\n    <>\n      <Breadcrumbs />\n      <section className=\"testi-page section-break  bg-light-grey bg-opacity-40\">\n        <div className=\"side-padding\">\n          <div className=\"mx-auto max-w-[1200px] \">\n            <div className=\"heading-wrapper pb-6\">\n              <h1 className=\"heading\">What Our Clients Say About Us</h1>\n            </div>\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\" ref={testimonalRef}>\n              {dataFromChild?.map((item) => (\n                <div className=\"col-span-1\" key={item?.id}>\n                  <div className=\"testi-box flex md:flex-row flex-col gap-5 rounded-lg border bg-white p-4\">\n                    <figure className=\"h-32 w-32 flex-none overflow-hidden rounded-lg\">\n                      <img src={item?.image} alt={item?.name} />\n                    </figure>\n                    <article>\n                      <div className=\"pb-3 text-lg leading-7\">\n                        <HtmlParse data={item?.description} />\n                      </div>\n                      <div className=\"testi-client\">\n                        <h3 className=\"text-xl text-secondary \">\n                          {item?.name}\n                        </h3>\n                        <p className=\"text-sm text-grey\">{item?.designation}</p>\n                      </div>\n                    </article>\n                  </div>\n                </div>\n              ))}\n              \n            </div>\n            <Pagination\n                ref={testimonalRef}\n                data={testimonals}\n                view={8}\n                setDataFromChild={setDataFromChild}\n              />\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Testimonials;\n"],"names":["_ref","data","_jsx","_Fragment","children","parse","Pagination","forwardRef","ref","view","setDataFromChild","executeScroll","current","scrollIntoView","behavior","block","_useState","useState","_useState2","_slicedToArray","viewProduct","_useState3","_useState4","currentPage","setCurrentPage","totalProduct","length","totalViewInPage","Math","ceil","currentProducts","useMemo","start","slice","useEffect","_jsxs","className","onClick","Array","from","_","index","concat","dataFromChild","testimonalRef","useRef","testimonals","useGet","Breadcrumbs","map","item","src","image","alt","name","HtmlParse","description","designation","id"],"sourceRoot":""}