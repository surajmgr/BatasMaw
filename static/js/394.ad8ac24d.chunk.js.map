{"version":3,"file":"static/js/394.ad8ac24d.chunk.js","mappings":"qOA0IA,IAnGY,SAAHA,GAA8B,IAAxBC,EAAID,EAAJC,KAAMC,EAAUF,EAAVE,WACLC,GAAiBC,EAAAA,EAAAA,GAAO,sBAA9BC,KACRC,GAAgCC,EAAAA,EAAAA,UAAS,CAAC,WAAY,aAAYC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3DI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAwBL,EAAAA,EAAAA,UAAS,KAAIM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,GAASC,EAAAA,EAAAA,QAAO,MAEhBC,GAAwBC,EAAAA,EAAAA,UAC5B,kBAxCgC,SAACC,GACnC,OACS,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EACIC,KAAI,SAACC,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVD,GAAQ,IACXE,UAAWF,EAASE,UACjBH,KAAI,SAACI,GAAQ,OAAAF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTE,GAAQ,IACXC,SAAUD,EAASC,SAASC,QAAO,SAACC,GAAO,OAAKA,CAAO,KAAC,IAEzDD,QAAO,SAACF,GAAQ,OAAKA,EAASC,SAASG,OAAS,CAAC,KAAC,IAEtDF,QAAO,SAACL,GAAQ,OAAKA,EAASE,UAAUK,OAAS,CAAC,MAAK,EAE9D,CA0BUC,CAA4B3B,EAAa,GAC/C,CAACA,IAEGiB,EAAUF,EACVa,GAAWZ,EAAAA,EAAAA,UAAQ,kBA1Bd,QAFWa,EA4BwBZ,SA1BnC,IAATY,OAAS,EAATA,EACIC,SAAQ,SAACX,GAAQ,OACjBA,EAASE,UAAUS,SAAQ,SAACR,GAAQ,OAClCA,EAASC,SAASL,KAAI,SAACO,GAAO,MAAM,CAClCM,GAAW,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASM,GACbC,IAAY,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAASO,IACdC,KAAa,OAAPR,QAAO,IAAPA,OAAO,EAAPA,EAASS,KACfC,KAAa,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASU,KAChB,GAAE,GACJ,IAEFX,QAAO,SAACC,GAAO,OAAKA,EAAQO,KAAOP,EAAO,MAASA,EAAQU,IAAI,MAAK,GAbpD,IAACN,CA4BgC,GAAE,CAACZ,IAanDmB,EAZa,SAACtC,GAClB,OAAOmB,EAAQoB,QAAO,SAACC,EAAiBnB,GAQtC,OAPAA,EAASE,UAAUkB,SAAQ,SAACjB,GAC1BA,EAASC,SAASgB,SAAQ,SAACd,GACrBA,EAAQ3B,OAASA,IACnBwC,EAAgBb,QAAUA,EAE9B,GACF,IACOa,CACT,GAAG,CAAC,EACN,CACgBE,CAAW1C,GAsB3B,OArBA2C,EAAAA,EAAAA,YAAU,WACR,GAAI1C,EACFS,EAAY,CAACkC,WAAW3C,EAAWiC,KAAMU,WAAW3C,EAAWmC,QAC/DtB,EAAQ,SACH,GAAId,EAAM,CACQ,IAAD6C,EAAtB,GAAW,OAAPP,QAAO,IAAPA,GAAAA,EAASX,QACXjB,EAAY,CAAQ,OAAP4B,QAAO,IAAPA,OAAO,EAAPA,EAASX,QAAQO,IAAY,OAAPI,QAAO,IAAPA,GAAgB,QAATO,EAAPP,EAASX,eAAO,IAAAkB,OAAT,EAAPA,EAAkBT,OACrDtB,EAAQ,GAEZ,MACEJ,EAAY,CAAC,WAAY,aACzBI,EAAQ,IAEZ,GAAG,CAACd,EAAMC,KAEV0C,EAAAA,EAAAA,YAAU,WACJ5B,EAAO+B,SACT/B,EAAO+B,QAAQC,QAAQtC,EAAUI,EAErC,GAAG,CAACJ,EAAUI,KAGZmC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CACXC,OAAQzC,EACRI,KAAMA,EACNsC,iBAAiB,EACjBC,UAAU,yDACVC,IAAKtC,EAAOuC,SAAA,EAEZC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,YAAY,wFACZC,IAAI,uDAELzD,IACCsD,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CACLlD,SAAU,CAACmC,WAAW3C,EAAWiC,KAAMU,WAAW3C,EAAWmC,OAC7DwB,KACE,IAAIC,EAAAA,KAAK,CACPC,QAASC,EACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MAErBZ,UAEDC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CACJ1D,SAAU,CAACmC,WAAW3C,EAAWiC,KAAMU,WAAW3C,EAAWmC,OAAOkB,SAEnErD,EAAWoC,SAMjBP,EAASV,KAAI,SAACgD,GAAM,OACnBb,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAELlD,SAAU,CAAC2D,EAAOlC,IAAKkC,EAAM,MAC7BR,KACE,IAAIC,EAAAA,KAAK,CACPC,QAASC,EACTC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,MAErBZ,UAEDC,EAAAA,EAAAA,KAACY,EAAAA,EAAK,CAAAb,SAAEc,EAAO/B,QAXV+B,EAAOnC,GAYL,MAIjB,C,gKCGA,EAxImB,SAAHlC,GAKT,IAJLsE,EAAgBtE,EAAhBsE,iBACAC,EAAmBvE,EAAnBuE,oBACArE,EAAUF,EAAVE,WACAkB,EAAOpB,EAAPoB,QAEQoD,GAAkBC,EAAAA,EAAAA,KAAlBD,eAER5B,EAAAA,EAAAA,YAAU,WACJ1C,GACFqE,GAAoB,SAACG,GAAS,OAAAnD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBmD,GAAS,IACZpD,SAAU,GACVqD,aAAc,GACdlD,SAAU,GACVmD,SAAU,GACV3E,KAAM,IAAE,GAGd,GAAG,CAACC,EAAYqE,IAEhB,IAAMM,EAAuB,SAACC,EAAKC,GAOjC,GANAR,GAAoB,SAACG,GAAS,OAAAnD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBmD,GAAS,IAAAM,EAAAA,EAAAA,GAAA,GACXF,EAAMC,GAAK,IAEdP,EAAc,IAEF,aAARM,EAAoB,CACtB,IAAMG,EAAe7D,EAAQ8D,MAAK,SAACC,GAAI,OAAKA,EAAK7C,OAASyC,CAAK,IAC/DR,GAAoB,SAACG,GAAS,OAAAnD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBmD,GAAS,IACZC,cAA0B,OAAZM,QAAY,IAAZA,OAAY,EAAZA,EAAczD,YAAa,GACzCC,SAAU,GACVmD,SAAU,GACV3E,KAAM,IAAE,GAEZ,MAAO,GAAY,aAAR6E,EAAoB,CAAC,IAADM,EACvBC,EAAgD,QAAhCD,EAAGd,EAAiBK,oBAAY,IAAAS,OAAA,EAA7BA,EAA+BF,MACtD,SAACC,GAAI,OAAKA,EAAK7C,OAASyC,CAAK,IAG3BM,GACFC,QAAQC,IAAIF,EAAiB3D,SAAU,YACvC6C,GAAoB,SAACG,GAAS,OAAAnD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBmD,GAAS,IACZE,SAAUS,EAAiB3D,UAAY,GACvCzB,KAAM,IAAE,KAGVsE,GAAoB,SAACG,GAAS,OAAAnD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzBmD,GAAS,IACZE,SAAU,GACV3E,KAAM,IAAE,GAGd,CACF,EAEMuF,GAAmBrE,EAAAA,EAAAA,UACvB,kBACEC,EAAQC,KAAI,SAAC8D,EAAMM,GAAK,OACtBjC,EAAAA,EAAAA,KAAA,UAAQuB,MAAOI,EAAK7C,KAAKiB,SACtB4B,EAAK7C,MADuBmD,EAEtB,GACT,GACJ,CAACrE,IAGGsE,GAAmBvE,EAAAA,EAAAA,UACvB,eAAAwE,EAAA,OAC+B,QAD/BA,EACErB,EAAiBK,oBAAY,IAAAgB,OAAA,EAA7BA,EAA+BtE,KAAI,SAAC8D,EAAMM,GAAK,OAC7CjC,EAAAA,EAAAA,KAAA,UAAQuB,MAAOI,EAAK7C,KAAKiB,SACtB4B,EAAK7C,MADuBmD,EAEtB,GACT,GACJ,CAACnB,EAAiBK,eAGdiB,GAAgBzE,EAAAA,EAAAA,UAAQ,WAAO,IAAD0E,EAC5BC,EAAe,IAAIC,IACE,QADCF,EAC1BvB,EAAiBM,gBAAQ,IAAAiB,OAAA,EAAzBA,EAA2BxE,KAAI,SAAC8D,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMlF,IAAI,KAErD,OAAO+F,EAAAA,EAAAA,GAAIF,GAAczE,KAAI,SAACpB,EAAMwF,GAAK,OACvCjC,EAAAA,EAAAA,KAAA,UAAQuB,MAAO9E,EAAKsD,SACjBtD,GADuBwF,EAEjB,GAEb,GAAG,CAACnB,EAAiBM,WAErB,OACEpB,EAAAA,EAAAA,KAAA,QAAMH,UAAU,yBAAwBE,UACtCN,EAAAA,EAAAA,MAAA,OAAKI,UAAU,uDAAsDE,SAAA,EACnEC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0CAAyCE,UACtDN,EAAAA,EAAAA,MAAA,UACEX,KAAK,WACLe,UAAU,qFACV4C,SAAU,SAACC,GAAC,OAAKrB,EAAqB,WAAYqB,EAAEC,OAAOpB,MAAM,EACjEA,MAAOT,EAAiBhD,SACxB,aAAW,kBAAiBiC,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQuB,MAAM,GAAExB,SAAC,oBAChBiC,QAGLhC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0CAAyCE,UACtDN,EAAAA,EAAAA,MAAA,UACEX,KAAK,WACLe,UAAU,qFACV4C,SAAU,SAACC,GAAC,OAAKrB,EAAqB,WAAYqB,EAAEC,OAAOpB,MAAM,EACjEA,MAAOT,EAAiB7C,SACxB2E,UAAW9B,EAAiBhD,SAC5B,aAAW,kBAAiBiC,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQuB,MAAM,GAAExB,SAAC,oBAChBmC,QAGLlC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0CAAyCE,UACtDN,EAAAA,EAAAA,MAAA,UACEX,KAAK,OACLe,UAAU,qFACV0B,MAAOT,EAAiBrE,KACxBmG,UAAW9B,EAAiB7C,SAC5BwE,SAAU,SAACC,GAAC,OAAKrB,EAAqB,OAAQqB,EAAEC,OAAOpB,MAAM,EAC7D,aAAW,cAAaxB,SAAA,EAExBC,EAAAA,EAAAA,KAAA,UAAQuB,MAAM,GAAExB,SAAC,gBAChBqC,WAMb,E,iDCJA,GAvHmBS,EAAAA,EAAAA,aAAW,SAAArG,EAA6BsD,GAAS,IAAnCkB,EAAaxE,EAAbwE,cACzBtD,EAR4B,SAACE,GACnC,OACS,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASO,QAAO,SAACL,GAAQ,OACvBA,EAASE,UAAU8E,MAAK,SAAC7E,GAAQ,OAAKA,EAASC,SAASG,OAAS,CAAC,GAAC,MAChE,EAET,CAEgCC,CADuB9B,EAAPoB,SAS9C,OACEoC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oBAAmBE,UAChCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,eAAcE,UAC3BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,oBAAmBE,UAChCC,EAAAA,EAAAA,KAAC+C,EAAAA,GAAI,CAAAhD,UACHN,EAAAA,EAAAA,MAAA,OAAKI,UAAU,2CAA0CE,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,aAAYE,UACzBC,EAAAA,EAAAA,KAACgD,EAAAA,GAAO,CAACnD,UAAU,wCAAuCE,SAClC,OAArBrC,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBG,KAAI,SAACC,GAAQ,OACnC2B,EAAAA,EAAAA,MAACwD,EAAAA,GAAG,CAEFpD,UAAU,uFAAsFE,SAAA,CAEvF,OAARjC,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,MACXkB,EAAAA,EAAAA,KAACkD,EAAAA,IAAc,MAJF,OAARpF,QAAQ,IAARA,OAAQ,EAARA,EAAUY,GAKX,SAIZsB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,yDAAwDE,SAC/C,OAArBrC,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBG,KAAI,SAACC,EAAUmE,GAAK,IAAAkB,EAAA,OAC1CnD,EAAAA,EAAAA,KAACoD,EAAAA,GAAQ,CAAArD,UACPC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gEAA+DE,SACnE,OAARjC,QAAQ,IAARA,GAAmB,QAAXqF,EAARrF,EAAUE,iBAAS,IAAAmF,OAAX,EAARA,EAAqBtF,KAAI,SAACI,EAAUgE,GAAK,IAAAoB,EAAA,OACxCrD,EAAAA,EAAAA,KAACsD,EAAAA,SAAc,CAAAvD,SACJ,OAAR9B,QAAQ,IAARA,GAAkB,QAAVoF,EAARpF,EAAUC,gBAAQ,IAAAmF,OAAV,EAARA,EAAoBxF,KAAI,SAAC8D,GAAI,OAC5BlC,EAAAA,EAAAA,MAAA,OACEI,UAAU,uBAAsBE,SAAA,EAGhCC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,eAAcE,SAAM,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM7C,QACpCW,EAAAA,EAAAA,MAAA,MAAII,UAAU,iBAAgBE,SAAA,EACvB,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM7D,YACL2B,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aACD,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM7D,aAGN,OAAJ6D,QAAI,IAAJA,OAAI,EAAJA,EAAM1D,YACLwB,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aACD,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM1D,aAGN,OAAJ0D,QAAI,IAAJA,OAAI,EAAJA,EAAMlF,QACLgD,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,SACD,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAMlF,SAGN,OAAJkF,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,QACL9D,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,SACD,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,SAGN,OAAJ5B,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,YACL/D,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YACD,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,aAGN,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,SACLhE,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WACNC,EAAAA,EAAAA,KAAC0D,EAAAA,GAAI,CACHC,GAAE,UAAAC,OAAgB,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,OACpB5D,UAAU,kDAAiDE,SAEtD,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,YAIR,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,SACLpE,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WACNC,EAAAA,EAAAA,KAAC0D,EAAAA,GAAI,CACHC,GAAE,OAAAC,OAAa,OAAJjC,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,OACjBhE,UAAU,kDAAiDE,SAEtD,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,eAKfpE,EAAAA,EAAAA,MAAA,UACEI,UAAU,yEACViE,QAAS,YA7FV,SAACnC,GAC5BX,EAAcW,GACV7B,GAAOA,EAAIP,SACbO,EAAIP,QAAQwE,eAAe,CAAEC,SAAU,UAE3C,CAyFgCC,CAAqBtC,EACvB,EAAE5B,SAAA,CACH,eAECC,EAAAA,EAAAA,KAACkE,EAAAA,IAAgB,CAACrE,UAAU,kBAhErB,OAAJ8B,QAAI,IAAJA,OAAI,EAAJA,EAAMjD,GAkEP,KAtEmB,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAUS,GAwEd,OA3EA,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUY,GA8Ed,gBAS7B,I,UCxCA,EAnFiB,WACf,IAAAyF,GACEvH,EAAAA,EAAAA,GAAO,sBADKD,EAAYwH,EAAlBtH,KAA+BuH,EAAeD,EAA1BE,UAEtB7G,GAASC,EAAAA,EAAAA,QAAO,MACtB6G,GAAsCrD,EAAAA,EAAAA,KAA9BvE,EAAU4H,EAAV5H,WAAYsE,EAAasD,EAAbtD,cACpBlE,GAAgDC,EAAAA,EAAAA,UAAS,CACvDe,SAAU,GACVqD,aAAc,GACdlD,SAAU,GACVmD,SAAU,GACV3E,KAAM,KACNO,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GANKgE,EAAgB9D,EAAA,GAAE+D,EAAmB/D,EAAA,GAsBtCU,GAAwBC,EAAAA,EAAAA,UAC5B,kBAdS,QAF0BC,EAgBDjB,SAdzB,IAAPiB,OAAO,EAAPA,EACIC,KAAI,SAACC,GAAQ,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACVD,GAAQ,IACXE,UAAWF,EAASE,UACjBH,KAAI,SAACI,GAAQ,OAAAF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTE,GAAQ,IACXC,SAAUD,EAASC,SAASC,QAAO,SAACC,GAAO,OAAKA,CAAO,KAAC,IAEzDD,QAAO,SAACF,GAAQ,OAAKA,EAASC,SAASG,OAAS,CAAC,KAAC,IAEtDF,QAAO,SAACL,GAAQ,OAAKA,EAASE,UAAUK,OAAS,CAAC,MAAK,GAZ1B,IAACT,CAgBY,GAC/C,CAACjB,IAEH,OAAGyH,GACMpE,EAAAA,EAAAA,KAACuE,EAAAA,EAAO,KAGf9E,EAAAA,EAAAA,MAAA+E,EAAAA,SAAA,CAAAzE,SAAA,EACEC,EAAAA,EAAAA,KAACyE,EAAAA,EAAW,KACZhF,EAAAA,EAAAA,MAAA,WAASI,UAAU,gBAAeE,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kBAAiBE,UAC9BC,EAAAA,EAAAA,KAAA,UAAQH,UAAU,yBAAwBE,UACxCC,EAAAA,EAAAA,KAAA,OACE0E,IAAI,4BACJ7E,UAAU,oCACV8E,IAAI,eAIVlF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,iCAAgCE,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mBAAkBE,UAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,eAAcE,UAC3BN,EAAAA,EAAAA,MAAA,OAAKI,UAAU,oBAAmBE,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,mCAAkCE,UAC/CC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,UAASE,SAAC,qCAI1BC,EAAAA,EAAAA,KAAC4E,EAAU,CACT9D,iBAAkBA,EAClBC,oBAAqBA,EACrBrE,WAAYA,EACZkB,QAASF,YAKjBsC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,aAAaC,IAAKtC,EAAOuC,UACtCC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAG,CACFpI,KAAMqE,EAAiBrE,KACvBC,WAAYA,EACZkB,QAASF,OAGbsC,EAAAA,EAAAA,KAAC8E,EAAU,CACT9D,cAAeA,EACflB,IAAKtC,EACLI,QAASjB,YAMrB,C","sources":["Component/Global/Map.jsx","Component/About/Branches/BranchForm.jsx","Component/About/Branches/BranchTabs.jsx","Pages/About/Branches.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from \"react\";\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport markerIconPng from \"leaflet/dist/images/marker-icon.png\";\nimport { Icon } from \"leaflet\";\nimport useGet from \"../../Global/Apis/useGet\";\nconst filterProvincesWithServices = (mapData) => {\n  return (\n    mapData\n      ?.map((province) => ({\n        ...province,\n        districts: province.districts\n          .map((district) => ({\n            ...district,\n            services: district.services.filter((service) => service),\n          }))\n          .filter((district) => district.services.length > 0),\n      }))\n      .filter((province) => province.districts.length > 0) || []\n  );\n};\n\nconst getAllBranches = (allMarker) => {\n  return (\n    allMarker\n      ?.flatMap((province) =>\n        province.districts.flatMap((district) =>\n          district.services.map((service) => ({\n            id: service?.id,\n            lat: service?.lat,\n            long: service?.lang,\n            name: service?.name,\n          })),\n        ),\n      )\n      .filter((service) => service.lat && service.long && service.name) || []\n  );\n};\n\nconst Map = ({ city, coordinate }) => {\n  const { data: servicesData } = useGet(\"provinces-services\");\n  const [position, setPosition] = useState([28.3780464, 83.9999901]);\n  const [zoom, setZoom] = useState(7.5);\n  const mapRef = useRef(null);\n  \n  const provincesWithServices = useMemo(\n    () => filterProvincesWithServices(servicesData),\n    [servicesData],\n  );\n  const mapData = provincesWithServices;\n  const branches = useMemo(() => getAllBranches(mapData), [mapData]);\n  const getCitygeo = (city) => {\n    return mapData.reduce((filteredService, province) => {\n      province.districts.forEach((district) => {\n        district.services.forEach((service) => {\n          if (service.city === city) {\n            filteredService.service = service;\n          }\n        });\n      });\n      return filteredService;\n    }, {});\n  };\n  const cityGeo = getCitygeo(city);\n  useEffect(() => {\n    if (coordinate) {\n      setPosition([parseFloat(coordinate.lat), parseFloat(coordinate.lang)]);\n      setZoom(13);\n    } else if (city) {\n      if (cityGeo?.service) {\n        setPosition([cityGeo?.service.lat, cityGeo?.service?.lang]);\n        setZoom(13);\n      }\n    } else {\n      setPosition([28.3780464, 83.9999901]);\n      setZoom(7.5);\n    }\n  }, [city, coordinate]);\n\n  useEffect(() => {\n    if (mapRef.current) {\n      mapRef.current.setView(position, zoom);\n    }\n  }, [position, zoom]);\n\n  return (\n    <MapContainer\n      center={position}\n      zoom={zoom}\n      scrollWheelZoom={false}\n      className=\"h-full min-h-[400px] lg:min-h-[600px] xl:min-h-[800px]\"\n      ref={mapRef}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {coordinate && (\n        <Marker\n          position={[parseFloat(coordinate.lat), parseFloat(coordinate.lang)]}\n          icon={\n            new Icon({\n              iconUrl: markerIconPng,\n              iconSize: [25, 41],\n              iconAnchor: [12, 41],\n              popupAnchor: [0, -30],\n            })\n          }\n        >\n          <Popup\n            position={[parseFloat(coordinate.lat), parseFloat(coordinate.lang)]}\n          >\n            {coordinate.name}\n          </Popup>\n        </Marker>\n      )}\n\n      {/* Markers for all branches */}\n      {branches.map((branch) => (\n        <Marker\n          key={branch.id}\n          position={[branch.lat, branch.long]}\n          icon={\n            new Icon({\n              iconUrl: markerIconPng,\n              iconSize: [25, 41],\n              iconAnchor: [12, 41],\n              popupAnchor: [0, -30],\n            })\n          }\n        >\n          <Popup>{branch.name}</Popup>\n        </Marker>\n      ))}\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import React, { useMemo, useEffect } from \"react\";\nimport { useLayoutData } from \"../../../Global/Context/Layout\";\n\nconst BranchForm = ({\n  selectedLocation,\n  setSelectedLocation,\n  coordinate,\n  mapData,\n}) => {\n  const { setCoordinate } = useLayoutData();\n\n  useEffect(() => {\n    if (coordinate) {\n      setSelectedLocation((prevState) => ({\n        ...prevState,\n        province: \"\",\n        districtList: [],\n        district: \"\",\n        cityList: [],\n        city: \"\",\n      }));\n    }\n  }, [coordinate, setSelectedLocation]);\n\n  const handleLocationSelect = (key, value) => {\n    setSelectedLocation((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }));\n    setCoordinate(\"\");\n\n    if (key === \"province\") {\n      const provinceData = mapData.find((item) => item.name === value);\n      setSelectedLocation((prevState) => ({\n        ...prevState,\n        districtList: provinceData?.districts || [],\n        district: \"\",\n        cityList: [],\n        city: \"\",\n      }));\n    } else if (key === \"district\") {\n      const selectedDistrict = selectedLocation.districtList?.find(\n        (item) => item.name === value,\n      );\n\n      if (selectedDistrict) {\n        console.log(selectedDistrict.services, \"services\");\n        setSelectedLocation((prevState) => ({\n          ...prevState,\n          cityList: selectedDistrict.services || [],\n          city: \"\",\n        }));\n      } else {\n        setSelectedLocation((prevState) => ({\n          ...prevState,\n          cityList: [],\n          city: \"\",\n        }));\n      }\n    }\n  };\n\n  const provincesOptions = useMemo(\n    () =>\n      mapData.map((item, index) => (\n        <option value={item.name} key={index}>\n          {item.name}\n        </option>\n      )),\n    [mapData],\n  );\n\n  const districtsOptions = useMemo(\n    () =>\n      selectedLocation.districtList?.map((item, index) => (\n        <option value={item.name} key={index}>\n          {item.name}\n        </option>\n      )),\n    [selectedLocation.districtList],\n  );\n\n  const citiesOptions = useMemo(() => {\n    const uniqueCities = new Set(\n      selectedLocation.cityList?.map((item) => item?.city),\n    );\n    return [...uniqueCities].map((city, index) => (\n      <option value={city} key={index}>\n        {city}\n      </option>\n    ));\n  }, [selectedLocation.cityList]);\n\n  return (\n    <form className=\"mx-auto max-w-[1000px]\">\n      <div className=\"-mx-2 flex flex-wrap gap-y-4 md:flex-nowrap lg:-mx-8\">\n        <div className=\"form-group w-full px-2 md:w-1/3 lg:px-8\">\n          <select\n            name=\"province\"\n            className=\"form-control w-full border border-solid border-grey px-2 py-2 capitalize outline-0\"\n            onChange={(e) => handleLocationSelect(\"province\", e.target.value)}\n            value={selectedLocation.province}\n            aria-label=\"Select Province\"\n          >\n            <option value=\"\">Select Province</option>\n            {provincesOptions}\n          </select>\n        </div>\n        <div className=\"form-group w-full px-2 md:w-1/3 lg:px-8\">\n          <select\n            name=\"district\"\n            className=\"form-control w-full border border-solid border-grey px-2 py-2 capitalize outline-0\"\n            onChange={(e) => handleLocationSelect(\"district\", e.target.value)}\n            value={selectedLocation.district}\n            disabled={!selectedLocation.province}\n            aria-label=\"Select District\"\n          >\n            <option value=\"\">Select District</option>\n            {districtsOptions}\n          </select>\n        </div>\n        <div className=\"form-group w-full px-2 md:w-1/3 lg:px-8\">\n          <select\n            name=\"city\"\n            className=\"form-control w-full border border-solid border-grey px-2 py-2 capitalize outline-0\"\n            value={selectedLocation.city}\n            disabled={!selectedLocation.district}\n            onChange={(e) => handleLocationSelect(\"city\", e.target.value)}\n            aria-label=\"Select City\"\n          >\n            <option value=\"\">Select City</option>\n            {citiesOptions}\n          </select>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default BranchForm;\n","import React, { forwardRef } from \"react\";\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\nimport { HiArrowLongRight } from \"react-icons/hi2\";\nimport { IoIosArrowDown } from \"react-icons/io\";\nimport useGet from \"../../../Global/Apis/useGet\";\nimport { Link } from \"react-router-dom\";\n\nconst filterProvincesWithServices = (mapData) => {\n  return (\n    mapData?.filter((province) =>\n      province.districts.some((district) => district.services.length > 0),\n    ) || []\n  );\n};\nconst BranchTabs = forwardRef(({ setCoordinate, mapData }, ref) => {\n  const provincesWithServices = filterProvincesWithServices(mapData);\n\n  const handleViewOnMapClick = (item) => {\n    setCoordinate(item);\n    if (ref && ref.current) {\n      ref.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n  return (\n    <div className=\"branch-tabs py-12\">\n      <div className=\"side-padding\">\n        <div className=\"container mx-auto\">\n          <Tabs>\n            <div className=\"grid gap-8 md:grid-cols-3 lg:grid-cols-4\">\n              <div className=\"col-span-1\">\n                <TabList className=\"border border-solid border-light-grey\">\n                  {provincesWithServices?.map((province) => (\n                    <Tab\n                      key={province?.id}\n                      className=\"tab border-solid border-light-grey px-4 py-3 uppercase [&:not(:last-child)]:border-b\"\n                    >\n                      {province?.name}\n                      <IoIosArrowDown />\n                    </Tab>\n                  ))}\n                </TabList>\n              </div>\n              <div className=\"tabs-content col-span-full md:col-span-2 lg:col-span-3\">\n                {provincesWithServices?.map((province, index) => (\n                  <TabPanel key={province?.id}>\n                    <div className=\"grid grid-cols-1 gap-8 gap-y-10 lg:grid-cols-2 xl:grid-cols-3\">\n                      {province?.districts?.map((district, index) => (\n                        <React.Fragment key={district?.id}>\n                          {district?.services?.map((item) => (\n                            <div\n                              className=\"col-span-1 text-grey\"\n                              key={item?.id}\n                            >\n                              <h3 className=\"heading mb-2\">{item?.name}</h3>\n                              <ul className=\"mb-3 leading-9\">\n                                {item?.province && (\n                                  <li>\n                                    <span>Province</span>\n                                    {item?.province}\n                                  </li>\n                                )}\n                                {item?.district && (\n                                  <li>\n                                    <span>District</span>\n                                    {item?.district}\n                                  </li>\n                                )}\n                                {item?.city && (\n                                  <li>\n                                    <span>city</span>\n                                    {item?.city}\n                                  </li>\n                                )}\n                                {item?.type && (\n                                  <li>\n                                    <span>Type</span>\n                                    {item?.type}\n                                  </li>\n                                )}\n                                {item?.location && (\n                                  <li>\n                                    <span>Address</span>\n                                    {item?.location}\n                                  </li>\n                                )}\n                                {item?.email && (\n                                  <li>\n                                    <span>Email</span>\n                                    <Link\n                                      to={`mailto:${item?.email}`}\n                                      className=\"inline-block hover:text-primary hover:underline\"\n                                    >\n                                      {item?.email}\n                                    </Link>\n                                  </li>\n                                )}\n                                {item?.phone && (\n                                  <li>\n                                    <span>Phone</span>\n                                    <Link\n                                      to={`tel:${item?.phone}`}\n                                      className=\"inline-block hover:text-primary hover:underline\"\n                                    >\n                                      {item?.phone}\n                                    </Link>\n                                  </li>\n                                )}\n                              </ul>\n                              <button\n                                className=\"flex w-full items-center justify-center gap-2 uppercase text-secondary\"\n                                onClick={() => {\n                                  handleViewOnMapClick(item);\n                                }}\n                              >\n                                View on Map\n                                <HiArrowLongRight className=\"text-2xl\" />\n                              </button>\n                            </div>\n                          ))}\n                        </React.Fragment>\n                      ))}\n                    </div>\n                  </TabPanel>\n                ))}\n              </div>\n            </div>\n          </Tabs>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default BranchTabs;\n","import React, { useMemo, useRef, useState } from \"react\";\nimport Breadcrumbs from \"../../Component/Global/BreadCrumbs\";\nimport Map from \"../../Component/Global/Map\";\nimport BranchForm from \"../../Component/About/Branches/BranchForm\";\nimport BranchTabs from \"../../Component/About/Branches/BranchTabs\";\nimport { useLayoutData } from \"../../Global/Context/Layout\";\nimport useGet from \"../../Global/Apis/useGet\";\nimport Loading from \"../../Component/Global/Loading\";\nconst Branches = () => {\n  const { data: servicesData, isLoading: servicesLoading } =\n    useGet(\"provinces-services\");\n  const mapRef = useRef(null);\n  const { coordinate, setCoordinate } = useLayoutData();\n  const [selectedLocation, setSelectedLocation] = useState({\n    province: \"\",\n    districtList: [],\n    district: \"\",\n    cityList: [],\n    city: \"\",\n  });\n  const filterProvincesWithServices = (mapData) => {\n    return (\n      mapData\n        ?.map((province) => ({\n          ...province,\n          districts: province.districts\n            .map((district) => ({\n              ...district,\n              services: district.services.filter((service) => service),\n            }))\n            .filter((district) => district.services.length > 0),\n        }))\n        .filter((province) => province.districts.length > 0) || []\n    );\n  };\n  const provincesWithServices = useMemo(\n    () => filterProvincesWithServices(servicesData),\n    [servicesData],\n  );\n  if(servicesLoading){\n    return <Loading/>\n  }\n  return (\n    <>\n      <Breadcrumbs />\n      <section className=\"branches-page\">\n        <div className=\"branches-banner\">\n          <figure className=\"h-[400px] md:h-[500px]\">\n            <img\n              src=\"/assets/images/hero/1.png\"\n              className=\"h-full object-cover object-center\"\n              alt=\"Batas\"\n            />\n          </figure>\n        </div>\n        <div className=\"branches-wrapper section-break\">\n          <div className=\"branch-form pb-8\">\n            <div className=\"side-padding\">\n              <div className=\"container mx-auto\">\n                <div className=\"heading-wrapper mb-7 text-center\">\n                  <h4 className=\"heading\">\n                    Covering Expanse: Our Network\n                  </h4>\n                </div>\n                <BranchForm\n                  selectedLocation={selectedLocation}\n                  setSelectedLocation={setSelectedLocation}\n                  coordinate={coordinate}\n                  mapData={provincesWithServices}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"branch-map\" ref={mapRef}>\n            <Map\n              city={selectedLocation.city}\n              coordinate={coordinate}\n              mapData={provincesWithServices}\n            />\n          </div>\n          <BranchTabs\n            setCoordinate={setCoordinate}\n            ref={mapRef}\n            mapData={servicesData}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Branches;\n"],"names":["_ref","city","coordinate","servicesData","useGet","data","_useState","useState","_useState2","_slicedToArray","position","setPosition","_useState3","_useState4","zoom","setZoom","mapRef","useRef","provincesWithServices","useMemo","mapData","map","province","_objectSpread","districts","district","services","filter","service","length","filterProvincesWithServices","branches","allMarker","flatMap","id","lat","long","lang","name","cityGeo","reduce","filteredService","forEach","getCitygeo","useEffect","parseFloat","_cityGeo$service","current","setView","_jsxs","MapContainer","center","scrollWheelZoom","className","ref","children","_jsx","TileLayer","attribution","url","Marker","icon","Icon","iconUrl","markerIconPng","iconSize","iconAnchor","popupAnchor","Popup","branch","selectedLocation","setSelectedLocation","setCoordinate","useLayoutData","prevState","districtList","cityList","handleLocationSelect","key","value","_defineProperty","provinceData","find","item","_selectedLocation$dis","selectedDistrict","console","log","provincesOptions","index","districtsOptions","_selectedLocation$dis2","citiesOptions","_selectedLocation$cit","uniqueCities","Set","_toConsumableArray","onChange","e","target","disabled","forwardRef","some","Tabs","TabList","Tab","IoIosArrowDown","_province$districts","TabPanel","_district$services","React","type","location","email","Link","to","concat","phone","onClick","scrollIntoView","behavior","handleViewOnMapClick","HiArrowLongRight","_useGet","servicesLoading","isLoading","_useLayoutData","Loading","_Fragment","Breadcrumbs","src","alt","BranchForm","Map","BranchTabs"],"sourceRoot":""}